var recordstatus="0,1,2,3,4,5,WA,7,8,9,10,11,AC".split(",")
var recordcolor="0,1,2,3,4,5,red,7,8,9,10,11,green".split(",")

var styles = {
    'bold'          : ['\x1B[1m',  '\x1B[22m'],
    'italic'        : ['\x1B[3m',  '\x1B[23m'],
    'underline'     : ['\x1B[4m',  '\x1B[24m'],
    'inverse'       : ['\x1B[7m',  '\x1B[27m'],
    'strikethrough' : ['\x1B[9m',  '\x1B[29m'],
    'white'         : ['\x1B[37m', '\x1B[39m'],
    'grey'          : ['\x1B[90m', '\x1B[39m'],
    'black'         : ['\x1B[30m', '\x1B[39m'],
    'blue'          : ['\x1B[34m', '\x1B[39m'],
    'cyan'          : ['\x1B[36m', '\x1B[39m'],
    'green'         : ['\x1B[32m', '\x1B[39m'],
    'magenta'       : ['\x1B[35m', '\x1B[39m'],
    'red'           : ['\x1B[31m', '\x1B[39m'],
    'yellow'        : ['\x1B[33m', '\x1B[39m'],
    'whiteBG'       : ['\x1B[47m', '\x1B[49m'],
    'greyBG'        : ['\x1B[49;5;8m', '\x1B[49m'],
    'blackBG'       : ['\x1B[40m', '\x1B[49m'],
    'blueBG'        : ['\x1B[44m', '\x1B[49m'],
    'cyanBG'        : ['\x1B[46m', '\x1B[49m'],
    'greenBG'       : ['\x1B[42m', '\x1B[49m'],
    'magentaBG'     : ['\x1B[45m', '\x1B[49m'],
    'redBG'         : ['\x1B[41m', '\x1B[49m'],
    'yellowBG'      : ['\x1B[43m', '\x1B[49m']
};
//http://www.brucewar.com/article/53661aae5a56fb6f7700000a
var languages="auto,pascal,c,c++,c++11,???,python2,python3,java8,node8.9,???,c++14,c++17,ruby,go,rust,php7,c#mono,vbmono,haskell,kotlin-native,kotlin-jvm,scala,peal,pypy2,pypy3,wen-yan".split(",")

var pagekey = "1584522792:saAqr9G7PpJj0H5EAscgVD2RfJbcgG1YWR4VHh9GrJY="
var selfdefinepagekey = false;
var readline = require('readline');
const cookie_x = "__client_id=[cid]; _uid=[uid]";
var Cookie
var cheerio = require('cheerio');
var umdid
var lastupload="0"
// Wait for user's response.
var userid;
var cnzzeid
//创建readline接口实例
var rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

// question方法

function fbnc(n){
    if(n==1 || n==2){return 1;}
    return fbnc(n-1)+fbnc(n-2)
}
const fs = require('fs');
var _opts
function saveopt(){
    _opts=JSON.stringify(opt)
fs.writeFileSync("opt.json",_opts);
}

if(fs.existsSync("opt.json")){
    _opts=fs.readFileSync('opt.json');
}
else{
_opts='{"lastLog":0,"cookie":""}'
fs.writeFileSync("opt.json",_opts);

}
var opt = JSON.parse(_opts)
Cookie=opt.cookie
var count=0,testd=1;
function dg(){
    count++;
if (count>testd)return 0;
 dg();
}


if(opt.lastLog+1000*3600*24*30 < Date.now()){
    console.log("LuoguCmd - Login")
    console.log("登录使用Cookie.")
    console.log("如果你是第一次登录，请访问:\ngithub.com/MicroBlock2017/LuoGuCMD/blob/master/login-chrome.md\n以知晓登录方法")
    console.log("---------------------------")
    rl.question("请输入(或复制)_uid:",function (uid){
        rl.question("请输入(或复制)__client_id:",function (clientid){
            Cookie=cookie_x.replace(/\[cid\]/g,clientid).replace(/\[uid\]/g,uid)
            opt.cookie=Cookie
            saveopt()
            console.clear()
            console.log("[LuoGuCmd V0.1 (Alpha) <By Micro>]\nThis is a free Luogu client for all OIer\nThe GPL protocol is used, and the source code is stored on Github.")
            main()
            
        })
    })
    opt.lastLog=Date.now()
    saveopt()
    
}else{
    console.log("LuoguCmd - Login")
    console.log("登录使用Cookie.\n系统检测到你已经登录，若要重新登录请使用 rlogin\n----------------------------------------------------")
    console.log("[LuoGuCmd V0.1 (Alpha) <By Micro>]\nThis is a free Luogu client for all OIer\nThe GPL protocol is used, and the source code is stored on Github.")
    main()
    
}



function main() {
    rl.question("> ", function (c) {
        var cmd = c.split(" ");
        getset.cookie=Cookie
        switch (cmd[0]) {
        case "r":{cmd[0]="record";}
        case "lk":{cmd[0]="lookat";break}
        }
        switch (cmd[0]) {
            
            //缩写
            case "record":{
                if(cmd.length==2){
                    lookrecord(cmd[1])
                    lastupload=cmd[1]
                break;
                }else if(cmd.length==1){
                    console.log("将会查看记忆记录:R"+lastupload)
                    lookrecord(lastupload)
                }
                else{
                
                console.log("没有与参数列表匹配的record命令")
            main();}
            break;
            }
            case "testdg":{
                var _tmp=Date.now()
                for(var xx=1;;xx+=1){
                testd=xx;
                count=0
                    dg()
                    console.log("无参递归测试"+xx+"次")
                }
                
                main();
                break;
            }
            case "fbnc":{
                console.log("fbnc("+cmd[1]+") = "+fbnc(parseInt(cmd[1])));
                main();
                break;
            }
            case "chknew":{
                ChkNew();
                break;
            }
            case "login": {
                
         
                if(opt.lastLog+1000*3600*24*30 < Date.now()){
                    console.log("LuoguCmd - Login")
                    console.log("登录使用Cookie.")
                    console.log("如果你是第一次登录，请访问:\ngithub.com/MicroBlock2017/LuoGuCMD/blob/master/login-chrome.md\n以知晓登录方法")
                    console.log("---------------------------")
                    rl.question("请输入(或复制)_uid:",function (uid){
                        rl.question("请输入(或复制)__client_id:",function (clientid){
                            Cookie=cookie_x.replace(/\[cid\]/g,clientid).replace(/\[uid\]/g,uid)
                            opt.cookie=Cookie
                            saveopt()
                            main()
                            
                        })
                    })
                    opt.lastLog=Date.now()
                    saveopt()
    
                }else{
                    console.log("LuoguCmd - Login")
                    console.log("登录使用Cookie.\n系统检测到你已经登录，若要重新登录请使用 rlogin")
                    main()
                }
               
                break;
            }
            case "rlogin":{
                console.log("LuoguCmd - Login")
                    console.log("登录使用Cookie.")
                    console.log("如果你是第一次登录，请访问:\ngithub.com/MicroBlock2017/LuoGuCMD/blob/master/login-chrome.md\n以知晓登录方法")
                    console.log("---------------------------")
                    rl.question("请输入(或复制)_uid:",function (uid){
                        rl.question("请输入(或复制)__client_id:",function (clientid){
                            Cookie=cookie_x.replace(/\[cid\]/g,clientid).replace(/\[uid\]/g,uid)
                            opt.cookie=Cookie
                            saveopt()
                            main();
                        })
                    })
                    opt.lastLog=Date.now()
                    saveopt()
                    
                    break;
            }
            case "me": {
                getuserinformation()

                break;
            }
            case "uploadtest":{
                uploadcode("P1000",16,"                ********\n               ************\n               ####....#.\n             #..###.....##....\n             ###.......######              ###            ###\n                ...........               #...#          #...#\n               ##*#######                 #.#.#          #.#.#\n            ####*******######             #.#.#          #.#.#\n           ...#***.****.*###....          #...#          #...#\n           ....**********##.....           ###            ###\n           ....****    *****....\n             ####        ####\n           ######        ######\n##############################################################\n#...#......#.##...#......#.##...#......#.##------------------#\n###########################################------------------#\n#..#....#....##..#....#....##..#....#....#####################\n##########################################    #----------#\n#.....#......##.....#......##.....#......#    #----------#\n##########################################    #----------#\n#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#\n##########################################    ############")
                break;
            }
            case "setcookie": {
                Cookie = cmd[1]
                main();
                break;
            }
            case "user":{
                if(cmd.length==2)
                usrmsg(cmd[1]);
                else
                console.log("查找错误：没有与参数列表匹配的user命令")
                break;
            }
            case "help": {
                if (cmd.length == 1) {
                    console.log("目前支持的命令:\nlookat <题目编号> -- 查看题目\nclear -- 清空\nhelp -- 显示此列表\nexit -- 退出")
                } else if (cmd.length == 2) {
                    switch (cmd[1]) {
                        case "lookat": {
                            console.log("lookat的格式:\n> lookat <题目编号>\n例子：\n> lookat P100\n");
                            break;
                        }
                        default: {
                            console.log("没有对应的解释或找不到此命令")
                        }
                    }


                } else {
                    console.log("查找题目错误：没有与参数列表匹配的lookat\nlookat的格式:\n> lookat <题目编号>\n例子：\n> lookat P100\n")
                }
                main();
                break;
            }
            case "getkey": {
                if (cmd.length != 1) {
                    getcsrfkey(true)
                } else {
                    getcsrfkey(false)
                }
                break;
            }
            case "loadcookie": {
                if (cmd.length == 3) {
                    console.log("正在解析Cookie...");

                    umdid = cmd[1]
                    console.log("UM_distinctid:\n" + umdid)
                    cnzzeid = cmd[2].split("-%26ntime%3D")[0]
                    cnzzeid += "-%26ntime%3D"
                    console.log("CNZZ_EID:\n" + cnzzeid + "%TIME%")
                    console.log("Cookie解析完毕.")
                }
                main();
                break;
            }
            case "setkey": {
                pagekey = cmd[1]
                console.log("将key设置为" + pagekey)
                selfdefinepagekey = true
                main();
                break;
            }

            case "clear": {
                console.clear();
                console.log("[LuoGuCmd V0.1 (Alpha) <By Micro>]");
                main();
                break;
            }
            case "lookat": {
                if (cmd.length == 2) {
                    console.log("正在查找题目：" + cmd[1]);
                    lookat(cmd[1]);
                }
                else {
                    console.log("查找题目错误：没有与参数列表匹配的lookat\nlookat的格式:\n> lookat <题目编号>\n例子：\n> lookat P100\n")
                }
                break;
            } Date.now()
            default: {
                if (cmd[0] == "exit") { console.log("Bye."); rl.close() }
                else { console.log("找不到命令" + cmd[0]); main(); }
                break;
            }
        }



        // 不加close，则不会结束
        //rl.close();
    });
}

// close事件监听
rl.on("close", function () {
    // 结束程序
    // process.exit(0);
});

var cookiess={
    "cookie": Cookie
}
var getset={host:"www.luogu.com.cn",path:pageUrl,headers:cookiess}
var pageUrl
function usrmsg(usrid) {
    var https = require('https');

    getset.path = '/user/' + usrid + "?_contentOnly=1";

    https.get(getset, function (res) {
        var html = '';
        res.on('data', function (data) {
            html += data;
        });
        res.on('end', function () {
            //数据获取完，执行回调函数
            callback(html);
        });
    });

    function callback(html) {
        var $ = cheerio.load(html);

        var m = JSON.parse($("body").text());
        console.log(m.currentData.user.name+" - [" + m.currentData.user.uid+","+m.currentData.user.color+"]")
        if(m.currentData.passedProblems!=undefined){
console.log("做过的题：\n 已AC：")
for(var l=0;l<m.currentData.passedProblems.length;l++){
console.log("    "+m.currentData.passedProblems[l].pid+" - "+m.currentData.passedProblems[l].title)
}
console.log(" 非AC：")
for(var l=0;l<m.currentData.submittedProblems.length;l++){
console.log("    "+m.currentData.submittedProblems[l].pid+" - "+m.currentData.submittedProblems[l].title)
}}
else{
    console.log("做过的题：\n 无法显示")
}
console.log("团队：")
if(m.currentData.teams!=undefined){
for(var l=0;l<m.currentData.teams.length;l++){
console.log("    T"+m.currentData.teams[l].team.id+" :"+m.currentData.teams[l].team.name)
}}else{
    console.log("无法显示")
}
         main();
    }
}
var https = require('https');
function lookat(bh) {
   

    var pageUrl = 'https://www.luogu.com.cn/api/problem/detail/' + bh;

    https.get(pageUrl, function (res) {
        var html = '';
        res.on('data', function (data) {
            html += data;
        });
        res.on('end', function () {
            //数据获取完，执行回调函数
            callback(html);
        });
    });

    function callback(html) {
        var $ = cheerio.load(html);

        var data = JSON.parse($("body").text());
        if (data.data.FullPID != undefined) {

            console.log("\n" + data.data.FullPID + " " + data.data.Name);
           // console.log("题目难度：" + data.data.Flag)
            if(data.data.Background!=null)console.log("题目背景：" + formatstr(data.data.Background))
            console.log("题目描述：" + formatstr(data.data.Description))
            console.log("输入格式：" + formatstr(data.data.InputFormat) + "\n输出格式：" + formatstr(data.data.OutputFormat));
        } else {
            console.log("获取出错！请检查题目编号和网络连接.\n如果你能正常访问该题，请联系作者\nQQ:1715311957")
        } main();
    }
}
function formatstr(string) {
    string = string.replace(/\/problem\//g, "lookat ").replace(/```haskell/g, "[").replace(/```/g, "]").replace(/!\[\]/, "图片：")
    return string;
}
function getuserinformation() {

    var pageUrl = 'www.luogu.com.cn';
    https.get({
        host:pageUrl,
        path:"/user/notification?_contentOnly=1",
        headers: {
        "cookie": Cookie
    }}, function (res) {
        var html = '';
        res.on('data', function (data) {
            html += data;
        });
        res.on('end', function () {
            //数据获取完，执行回调函数
            
            var m = JSON.parse(html);
            //console.log(m);
            if (m.code != undefined) {
                console.log("Hi," + m.currentUser.name + "\n你的UID是：" + m.currentUser.uid + "\n")
     
                
                userid = m.currentUser.uid;
                usrmsg(userid);
               
            } else {
                console.log("获取出错！请检查网络连接.\n如果你能正常访问www.luogu.com.cn/user/notification，请联系作者\nQQ:1715311957")
                rl.close();
            }
        });
    });

    
 



}
const fetch = require('node-fetch')


var loginheader = {
    "accept": "*/*",
    "accept-encoding": "gzip, deflate, br",
    "accept-language": "zh-CN,zh;q=0.9",
    "content-length": "73",
    "content-type": "application/json;charset=UTF-8",
    "cookie": Cookie,
    "origin": "https://www.luogu.com.cn",
    "referer": "https://www.luogu.com.cn/",
    "sec-fetch-dest": "empty",
    "sec-fetch-mode": "cors",
    "sec-fetch-site": "same-origin",
    "user-agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/82.0.4083.0 Safari/537.36",
    "x-csrf-token": pagekey
}


function login(username, passwd, yzm) {
    rl.question("请输入验证码： ", function (c) {
        getcsrfkey(0, function () {
            fetch("https://www.luogu.com.cn/api/auth/userPassLogin", {
                headers: loginheader,
                
                credentials: 'includes',
                body: JSON.stringify({
                    username: username,
                    password: passwd,
                    captcha: c
                }),
                method: "POST"
            }).then((response) => {
                console.log(response);
                return response.json();
            })
            .then((data) => {
                console.log(data);
                main();
            })
        })


    })
}


function getcsrfkey(shown, back) {

    if (selfdefinepagekey) {
        console.log("已经使用自定义Pagekey，如需要自动获取请重启(查看内容请加-shown)")
        if (shown) console.log(pagekey)
        if (back != undefined) {

            back()
        } else
            main();
    } else {
        var https = require('https');
        //Cookie=""
        var pageUrl = 'www.luogu.com.cn';
        getset.host=pageUrl
        getset.path="/"
        https.get(getset, function (res) {
            //console.log(res);
            var html = '';
            res.on('data', function (data) {
                html += data;
            });
            res.on('end', function () {
                for (var x = 0; x < res.rawHeaders.length; x++) {
                    //console.log(res.rawHeaders[x])
                    if ("Set-Cookie" == res.rawHeaders[x]) {
                        x++;
                        var _tmpa = res.rawHeaders[x].split(" ");
                        for (var mm = 0; mm < _tmpa.length; mm++) {
                            // console.log(_tmpa[mm].split("=")[0])
                            if (_tmpa[mm].split("=")[0] != "__client_id") continue;
                            //  Cookie=_tmpa[mm]+" "+ umdid+" "+" _uid=000000"+"; " +cnzzeid+ Math.round(Date.now()/1000);
                            break;
                        }

                        //    break;
                    }
                }
                //Cookie+=;
                //console.log("Cookie获取成功:" + Cookie)
                //数据获取完，执行回调函数
                callback(html);
            });
        });

        function callback(data) {
            var $ = cheerio.load(data);
            //console.log(data);
            console.log("正在获取csrf-token")
            pagekey = undefined;
            $("meta").each(function () {
                if ($(this)[0].attribs.name == "csrf-token") {
                    console.log("获取成功！(如需查看内容请加-shown)")
                    pagekey = $(this)[0].attribs.content
                    if (shown) console.log($(this)[0].attribs.content)
                }
            });

            if (pagekey == undefined) {
                console.log("获取csrf-token失败，请反馈给作者\nQQ:1715311957")
            } {
                if (back != undefined) {
                    back()
                } else
                    main();
            }
        }
    }
}



function ChkNew(){
    var http = require('https');
http.get("https://github.com/repos/MicroBlock2017/LuoGuCMD/contents/update.json",function(res){
res.on("end",function(){

    var options = {
        host: 'api.github.com', 
        port:443,
        path:"/repos/MicroBlock2017/LuoGuCMD/contents/update.json?ref=master", 
        method: 'GET', 
        headers: {
            'Content-Type': 'application/json',
            'User-Agent':'',
        }
    };
    http.get(options, function(res) {
        var resData = "";
        res.on("data",function(data){
            resData += data;
        });
        res.on("end", function() {
            m=JSON.parse(resData)
            var b = Buffer.alloc(m.content.replace(/[\u0391-\uFFE5]/g,"aa").length,m.content, m.encoding)
            var s = b.toString();
            console.log(s);
            main();
        });
        //res.
    })
})
});}



function uploadcode(problem,langu,code,o2=0){
    getcsrfkey(0,function (a){
        fetch("https://www.luogu.com.cn/fe/api/problem/submit/"+problem, {
        headers: {
            'accept':'*/*',
            'accept-encoding':'gzip, deflate, br',
            'accept-language':'zh-CN,zh;q=0.9',
            'content-type':'application/json',
            'cookie':Cookie,
            'origin':'https://www.luogu.com.cn',
            'referer':'https://www.luogu.com.cn/record/list?pid=P1000',
            'sec-fetch-dest':'empty',
            'sec-fetch-mode':'cors',
            'sec-fetch-site':'same-origin',
            'user-agent':'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/82.0.4083.0 Safari/537.36',
            'x-csrf-token':pagekey,
            'x-requested-with':'XMLHttpRequest',
                },
        body: JSON.stringify({
          code: code,
          lang: langu,
          enableO2:o2,
          verify: ""
        }),
        method: "POST"
      }).then(function (resp){
          
          var json=resp.json()
          return json;
        }).then(function (json){
            var o2str="O2:关闭";
          if(o2)o2str="O2:开启"
        console.log("\n提交成功！记录号："+json.rid+"\n代码类型："+languages[langu]+"\n"+o2str+"\n可输入record或r直接查看记录");
        lastupload=json.rid
        main()
      });
    })
}

function fakeuploadcode(problem,langu,code,o2=0){

    console.log()
}

function teamlist(teamid){
    console.log("正在查找团队T"+teamid+"的信息")
    fetch("https://www.luogu.com.cn/record/"+recordid+"?_contentOnly=1",{
        headers: {
            'cookie':Cookie,
                }}).then(function (a){console.log(JSON.stringify(a.json))})
}

function lookrecord(recordid){

fetch("https://www.luogu.com.cn/record/"+recordid+"?_contentOnly=1",{
    headers: {
        'cookie':Cookie,
            },
}).then(function (resp){
          
    var json=resp.json().catch(function (){
        console.log("读取失败！是否没有权限？")
        return JSON.parse('{"code":200,"currentTemplate":"RecordShow","currentData":{"record":{"detail":{"compileResult":{"success":false,"message":null,"__CLASS_NAME":"Luogu\\DataClass\\Record\\JudgeResult\\CompileResult"},"judgeResult":{"subtasks":[{"id":0,"score":0,"status":14,"testCases":[{"id":0,"status":0,"time":0,"memory":0,"score":0,"signal":0,"exitCode":0,"description":"","subtaskID":0,"__CLASS_NAME":"Luogu\\DataClass\\Record\\JudgeResult\\TestCaseJudgeResult"}],"judger":null,"time":0,"memory":0,"__CLASS_NAME":"Luogu\\DataClass\\Record\\JudgeResult\\SubtaskJudgeResult"}],"finishedCaseCount":1,"__CLASS_NAME":"Luogu\\DataClass\\Record\\JudgeResult\\JudgeResult"},"__CLASS_NAME":"Luogu\\DataClass\\Record\\RecordDetail"},"sourceCode":"                ********\u21b5               ************\u21b5               ####....#.\u21b5             #..###.....##....\u21b5             ###.......######              ###            ###\u21b5                ...........               #...#          #...#\u21b5               ##*#######                 #.#.#          #.#.#\u21b5            ####*******######             #.#.#          #.#.#\u21b5           ...#***.****.*###....          #...#          #...#\u21b5           ....**********##.....           ###            ###\u21b5           ....****    *****....\u21b5             ####        ####\u21b5           ######        ######\u21b5##############################################################\u21b5#...#......#.##...#......#.##...#......#.##------------------#\u21b5###########################################------------------#\u21b5#..#....#....##..#....#....##..#....#....#####################\u21b5##########################################    #----------#\u21b5#.....#......##.....#......##.....#......#    #----------#\u21b5##########################################    #----------#\u21b5#.#..#....#..##.#..#....#..##.#..#....#..#    #----------#\u21b5##########################################    ############","time":24,"memory":16868,"problem":{"pid":"P1000","title":"\u8d85\u7ea7\u739b\u4e3d\u6e38\u620f","difficulty":1,"fullScore":100,"type":"P"},"contest":null,"sourceCodeLength":1127,"submitTime":1584705467,"language":16,"user":{"uid":330692,"name":"MicroBlock","slogan":"","badge":null,"isAdmin":false,"isBanned":false,"color":"Gray","ccfLevel":0},"id":31953589,"status":14,"enableO2":false,"score":0},"testCaseGroup":[[0]],"showStatus":true},"currentTitle":"R31953589","currentTheme":{"id":1,"header":{"imagePath":null,"color":[[35,37,38,1],[65,67,69,1]],"blur":0,"brightness":0,"degree":90,"repeat":0,"position":[50,50],"size":[0,0],"type":2,"__CLASS_NAME":"Luogu\\DataClass\\User\\ThemeConfig\\HeaderFooterConfig"},"sideNav":{"logoBackgroundColor":[52,152,219,1],"color":[52,73,94,1],"invertColor":false,"__CLASS_NAME":"Luogu\\DataClass\\User\\ThemeConfig\\SideNavConfig"},"footer":{"imagePath":null,"color":[[51,51,51,1]],"blur":0,"brightness":0,"degree":0,"repeat":0,"position":[0,0],"size":[0,0],"type":2,"__CLASS_NAME":"Luogu\\DataClass\\User\\ThemeConfig\\HeaderFooterConfig"}},"currentUser":{"blogAddress":null,"followingCount":0,"followerCount":0,"ranking":null,"unreadMessageCount":0,"unreadNoticeCount":0,"verified":true,"uid":330692,"name":"ERR","slogan":"","badge":null,"isAdmin":false,"isBanned":false,"color":"ERR","ccfLevel":0}}')
    })
    return json;
  }).then(function (json){
      
    json.currentData.record.detail.judgeResult.subtasks.forEach(
        function (a){
            console.log("记录R"+recordid+":"+styles[recordcolor[a.status]][0]+recordstatus[a.status]+styles[recordcolor[a.status]][1])
        for(var m=0;a.testCases[m]!=undefined;m++){
        b=a.testCases[m];
        console.log(b.id+"号测试点:"+styles[recordcolor[b.status]][0]+recordstatus[b.status]+"   -   "+b.description+styles[recordcolor[b.status]][1])
        }})
    
    main();
})
}
